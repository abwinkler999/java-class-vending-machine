package com.awesomevendingco.vendingmachine;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import org.junit.Before;
import org.junit.Test;

import com.awesomevendingco.vendingmachine.VendingMachine;

public class VendingMachine_WhenMultipleValidCoinsInserted_Test {

    private VendingMachine machine;

    @Before
    public void setup() {
        machine = new VendingMachine();
        machine.setCoinTranslator(new MockCoinTranslator());
    }

    @Test
    public void it_displays_balance_with_values_of_multiple_inserted_coins() {
        machine.insertCoin("COIN");
        machine.insertCoin("COIN");
        assertEquals("0.90", machine.getDisplay());
    }

    @Test 
    public void it_displays_message_of_insert_coin_when_some_coins_inserted() {
    	machine.insertCoin("COIN");
    	machine.insertCoin("COIN");
    	assertEquals("INSERT COIN", machine.getMessage());
    }
    
    @Test
    public void it_puts_invalid_coin_in_coin_return() {
        machine.insertCoin("BAD_COIN");
        assertTrue(machine.getCoinReturn().contains("BAD_COIN"));
    }

    @Test
    public void it_puts_multiple_invalid_coins_in_coin_return() {
        machine.insertCoin("BAD_COIN");
        machine.insertCoin("OTHER_BAD_COIN");
        assertTrue(machine.getCoinReturn().contains("BAD_COIN"));
        assertTrue(machine.getCoinReturn().contains("OTHER_BAD_COIN"));
        assertEquals(2, machine.getCoinReturn().size());
    }

}
